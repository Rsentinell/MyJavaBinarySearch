public class MyJavaBinarySearch{

public static void main(String[]args){
int[] myTestArray;

// I will need to initialize and populate my array before i can use the method.

myTestArray = {1,2,3,4,5,6,7,8,9,10};

}

public int binarySearch(int[] list, int searchingFor){

int lowEnd, highEnd, middle;

// initializing my search variables.
lowEnd = 0;
highEnd = list.length() - 1;
// At this point I could just divide highEnd by 2, 
// but I want to remember that the search might be looking in the larger half and not always the smaller half.
middle = (highEnd - lowEnd)/2;

// I will need to add some code to make sure the array is organised before I try to search it.

// Here is where I will need my for loop.... For loop might not be the best, since we don't really know when it will be finished.
// We could still use a for and break when we find what we are looking for, but it seems better to use a while loop instead.

// I might have to rebuild the while controler.

while(middle >= 0){
  if(list[middle] > searchingFor){
   highEnd = (middle -1);
   middle = (highEnd - lowEnd)/2;
  }
  else if(list[middle] < searchingFor){
  lowEnd = (middle -1);
  middle = (highEnd - lowEnd)/2;
  }
  else if(list[middle] == searchingFor){
  
  break;
  }
  else{
  middle = (middle -1);
  }
  // This code is not correct yet.
  
  return middle;
  
 }
}
}
